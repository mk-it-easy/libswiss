# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Release libswiss on Java CI with Maven

on:
  release:
    types: [created]


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B test package --file pom.xml

  publish-github:
    needs: publish-to-maven-central
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
      repository-projects: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
          server-id: ossrh
          server-username: OSSRH_MAVEN_USERNAME
          server-password: OSSRH_MAVEN_PASSWORD
      - id: install-secret-key
        name: Install gpg secret key
        run: |
          echo -e "${{ secrets.SIGNING_GPG_PRIVATE_KEY}}" | base64 --decode | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG
      - uses: s4u/maven-settings-action@v2.8.0
        with:
          properties: '[{"secrets.SIGNING_GPG_KEYNAME": "${{ secrets.SIGNING_GPG_KEYNAME }}"}, {"secrets.SIGNING_GPG_PASSPHRASE": "${{ secrets.SIGNING_GPG_PASSPHRASE }}"}]'
      - name: Configure Git user
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"
      - name: Create release branch
        run: git switch -c release
      - name: Publish Package
        run: ./mvnw -B release:prepare release:perform
        env:
          OSSRH_MAVEN_USERNAME: ${{ secrets.OSSRH_MAVEN_USERNAME }}
          OSSRH_MAVEN_PASSWORD: ${{ secrets.OSSRH_MAVEN_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


 
  publish-to-maven-central:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Maven Central Repository
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          server-id: central
          server-username: MAVEN_CENTRAL_USERNAME
          server-password: MAVEN_CENTRAL_PASSWORD
          gpg-private-key: MAVEN_GPG_PRIVATE_KEY
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - name: Set version
        run: mvn versions:set -DnewVersion=${{ github.event.release.tag_name }}
      - name: Publish package
        run: mvn -P release --batch-mode deploy -DskipTests
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.SIGNING_GPG_PASSPHRASE }}
          MAVEN_GPG_PRIVATE_KEY: ${{ secrets.SIGNING_GPG_PRIVATE_KEY }}